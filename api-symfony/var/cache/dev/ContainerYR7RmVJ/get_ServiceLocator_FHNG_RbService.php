<?php

namespace ContainerYR7RmVJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_FHNG_RbService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.FHNG.Rb' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.FHNG.Rb'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\CommentController::getAllComments' => ['privates', '.service_locator.egipcEH.App\\Controller\\CommentController::getAllComments()', 'getCommentControllergetAllCommentsService', true],
            'App\\Controller\\CommentController::getCommentsByEventId' => ['privates', '.service_locator.egipcEH.App\\Controller\\CommentController::getCommentsByEventId()', 'getCommentControllergetCommentsByEventIdService', true],
            'App\\Controller\\DeleteCommentController::deleteComment' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteCommentController::deleteComment()', 'getDeleteCommentControllerdeleteCommentService', true],
            'App\\Controller\\DeleteEventController::deleteEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteEventController::deleteEvent()', 'getDeleteEventControllerdeleteEventService', true],
            'App\\Controller\\DeleteInscriptionController::deleteInscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteInscriptionController::deleteInscription()', 'getDeleteInscriptionControllerdeleteInscriptionService', true],
            'App\\Controller\\DeleteUserController::deleteUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteUserController::deleteUser()', 'getDeleteUserControllerdeleteUserService', true],
            'App\\Controller\\EvenementController::getEvents' => ['privates', '.service_locator.egipcEH.App\\Controller\\EvenementController::getEvents()', 'getEvenementControllergetEventsService', true],
            'App\\Controller\\EventController::getEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\EventController::getEvent()', 'getEventControllergetEventService', true],
            'App\\Controller\\InscriptionController::getInscriptions' => ['privates', '.service_locator.egipcEH.App\\Controller\\InscriptionController::getInscriptions()', 'getInscriptionControllergetInscriptionsService', true],
            'App\\Controller\\LoginController::login' => ['privates', '.service_locator.egipcEH.App\\Controller\\LoginController::login()', 'getLoginControllerloginService', true],
            'App\\Controller\\ModifEventController::modifyEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\ModifEventController::modifyEvent()', 'getModifEventControllermodifyEventService', true],
            'App\\Controller\\ModifStatusController::modifyStatus' => ['privates', '.service_locator.egipcEH.App\\Controller\\ModifStatusController::modifyStatus()', 'getModifStatusControllermodifyStatusService', true],
            'App\\Controller\\ModifUserController::modifyUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\ModifUserController::modifyUser()', 'getModifUserControllermodifyUserService', true],
            'App\\Controller\\NewCommentController::addCommentaire' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewCommentController::addCommentaire()', 'getNewCommentControlleraddCommentaireService', true],
            'App\\Controller\\NewEventController::addEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewEventController::addEvent()', 'getNewEventControlleraddEventService', true],
            'App\\Controller\\NewInscriptionController::addInscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewInscriptionController::addInscription()', 'getNewInscriptionControlleraddInscriptionService', true],
            'App\\Controller\\NewUserController::addUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewUserController::addUser()', 'getNewUserControlleraddUserService', true],
            'App\\Controller\\UniversiteController::getAllUniversites' => ['privates', '.service_locator.egipcEH.App\\Controller\\UniversiteController::getAllUniversites()', 'getUniversiteControllergetAllUniversitesService', true],
            'App\\Controller\\UserController::getUserById' => ['privates', '.service_locator.egipcEH.App\\Controller\\UserController::getUserById()', 'getUserControllergetUserByIdService', true],
            'App\\Controller\\UsersController::getAllUsers' => ['privates', '.service_locator.egipcEH.App\\Controller\\UsersController::getAllUsers()', 'getUsersControllergetAllUsersService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\CommentController:getAllComments' => ['privates', '.service_locator.egipcEH.App\\Controller\\CommentController::getAllComments()', 'getCommentControllergetAllCommentsService', true],
            'App\\Controller\\CommentController:getCommentsByEventId' => ['privates', '.service_locator.egipcEH.App\\Controller\\CommentController::getCommentsByEventId()', 'getCommentControllergetCommentsByEventIdService', true],
            'App\\Controller\\DeleteCommentController:deleteComment' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteCommentController::deleteComment()', 'getDeleteCommentControllerdeleteCommentService', true],
            'App\\Controller\\DeleteEventController:deleteEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteEventController::deleteEvent()', 'getDeleteEventControllerdeleteEventService', true],
            'App\\Controller\\DeleteInscriptionController:deleteInscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteInscriptionController::deleteInscription()', 'getDeleteInscriptionControllerdeleteInscriptionService', true],
            'App\\Controller\\DeleteUserController:deleteUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\DeleteUserController::deleteUser()', 'getDeleteUserControllerdeleteUserService', true],
            'App\\Controller\\EvenementController:getEvents' => ['privates', '.service_locator.egipcEH.App\\Controller\\EvenementController::getEvents()', 'getEvenementControllergetEventsService', true],
            'App\\Controller\\EventController:getEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\EventController::getEvent()', 'getEventControllergetEventService', true],
            'App\\Controller\\InscriptionController:getInscriptions' => ['privates', '.service_locator.egipcEH.App\\Controller\\InscriptionController::getInscriptions()', 'getInscriptionControllergetInscriptionsService', true],
            'App\\Controller\\LoginController:login' => ['privates', '.service_locator.egipcEH.App\\Controller\\LoginController::login()', 'getLoginControllerloginService', true],
            'App\\Controller\\ModifEventController:modifyEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\ModifEventController::modifyEvent()', 'getModifEventControllermodifyEventService', true],
            'App\\Controller\\ModifStatusController:modifyStatus' => ['privates', '.service_locator.egipcEH.App\\Controller\\ModifStatusController::modifyStatus()', 'getModifStatusControllermodifyStatusService', true],
            'App\\Controller\\ModifUserController:modifyUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\ModifUserController::modifyUser()', 'getModifUserControllermodifyUserService', true],
            'App\\Controller\\NewCommentController:addCommentaire' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewCommentController::addCommentaire()', 'getNewCommentControlleraddCommentaireService', true],
            'App\\Controller\\NewEventController:addEvent' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewEventController::addEvent()', 'getNewEventControlleraddEventService', true],
            'App\\Controller\\NewInscriptionController:addInscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewInscriptionController::addInscription()', 'getNewInscriptionControlleraddInscriptionService', true],
            'App\\Controller\\NewUserController:addUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\NewUserController::addUser()', 'getNewUserControlleraddUserService', true],
            'App\\Controller\\UniversiteController:getAllUniversites' => ['privates', '.service_locator.egipcEH.App\\Controller\\UniversiteController::getAllUniversites()', 'getUniversiteControllergetAllUniversitesService', true],
            'App\\Controller\\UserController:getUserById' => ['privates', '.service_locator.egipcEH.App\\Controller\\UserController::getUserById()', 'getUserControllergetUserByIdService', true],
            'App\\Controller\\UsersController:getAllUsers' => ['privates', '.service_locator.egipcEH.App\\Controller\\UsersController::getAllUsers()', 'getUsersControllergetAllUsersService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\CommentController::getAllComments' => '?',
            'App\\Controller\\CommentController::getCommentsByEventId' => '?',
            'App\\Controller\\DeleteCommentController::deleteComment' => '?',
            'App\\Controller\\DeleteEventController::deleteEvent' => '?',
            'App\\Controller\\DeleteInscriptionController::deleteInscription' => '?',
            'App\\Controller\\DeleteUserController::deleteUser' => '?',
            'App\\Controller\\EvenementController::getEvents' => '?',
            'App\\Controller\\EventController::getEvent' => '?',
            'App\\Controller\\InscriptionController::getInscriptions' => '?',
            'App\\Controller\\LoginController::login' => '?',
            'App\\Controller\\ModifEventController::modifyEvent' => '?',
            'App\\Controller\\ModifStatusController::modifyStatus' => '?',
            'App\\Controller\\ModifUserController::modifyUser' => '?',
            'App\\Controller\\NewCommentController::addCommentaire' => '?',
            'App\\Controller\\NewEventController::addEvent' => '?',
            'App\\Controller\\NewInscriptionController::addInscription' => '?',
            'App\\Controller\\NewUserController::addUser' => '?',
            'App\\Controller\\UniversiteController::getAllUniversites' => '?',
            'App\\Controller\\UserController::getUserById' => '?',
            'App\\Controller\\UsersController::getAllUsers' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\CommentController:getAllComments' => '?',
            'App\\Controller\\CommentController:getCommentsByEventId' => '?',
            'App\\Controller\\DeleteCommentController:deleteComment' => '?',
            'App\\Controller\\DeleteEventController:deleteEvent' => '?',
            'App\\Controller\\DeleteInscriptionController:deleteInscription' => '?',
            'App\\Controller\\DeleteUserController:deleteUser' => '?',
            'App\\Controller\\EvenementController:getEvents' => '?',
            'App\\Controller\\EventController:getEvent' => '?',
            'App\\Controller\\InscriptionController:getInscriptions' => '?',
            'App\\Controller\\LoginController:login' => '?',
            'App\\Controller\\ModifEventController:modifyEvent' => '?',
            'App\\Controller\\ModifStatusController:modifyStatus' => '?',
            'App\\Controller\\ModifUserController:modifyUser' => '?',
            'App\\Controller\\NewCommentController:addCommentaire' => '?',
            'App\\Controller\\NewEventController:addEvent' => '?',
            'App\\Controller\\NewInscriptionController:addInscription' => '?',
            'App\\Controller\\NewUserController:addUser' => '?',
            'App\\Controller\\UniversiteController:getAllUniversites' => '?',
            'App\\Controller\\UserController:getUserById' => '?',
            'App\\Controller\\UsersController:getAllUsers' => '?',
        ]);
    }
}
